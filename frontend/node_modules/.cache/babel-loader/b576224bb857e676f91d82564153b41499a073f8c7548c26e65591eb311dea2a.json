{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Arnav\\\\Desktop\\\\development-project\\\\Task-Management-System\\\\frontend\\\\src\\\\components\\\\Pagination.jsx\";\nimport { ChevronLeft, ChevronRight } from \"react-feather\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Pagination = ({\n  currentPage,\n  totalPages,\n  onPageChange\n}) => {\n  // Generate page numbers\n  const getPageNumbers = () => {\n    const pages = [];\n    const maxPagesToShow = 5;\n    if (totalPages <= maxPagesToShow) {\n      // Show all pages if total pages are less than or equal to maxPagesToShow\n      for (let i = 1; i <= totalPages; i++) {\n        pages.push(i);\n      }\n    } else {\n      // Always show first page\n      pages.push(1);\n\n      // Calculate start and end of page range\n      let start = Math.max(2, currentPage - 1);\n      let end = Math.min(totalPages - 1, currentPage + 1);\n\n      // Adjust if at the beginning\n      if (currentPage <= 2) {\n        end = Math.min(totalPages - 1, maxPagesToShow - 1);\n      }\n\n      // Adjust if at the end\n      if (currentPage >= totalPages - 1) {\n        start = Math.max(2, totalPages - maxPagesToShow + 2);\n      }\n\n      // Add ellipsis if needed\n      if (start > 2) {\n        pages.push(\"...\");\n      }\n\n      // Add middle pages\n      for (let i = start; i <= end; i++) {\n        pages.push(i);\n      }\n\n      // Add ellipsis if needed\n      if (end < totalPages - 1) {\n        pages.push(\"...\");\n      }\n\n      // Always show last page\n      pages.push(totalPages);\n    }\n    return pages;\n  };\n  if (totalPages <= 1) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pagination\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"page-item\",\n      onClick: () => onPageChange(currentPage - 1),\n      disabled: currentPage === 1,\n      children: /*#__PURE__*/_jsxDEV(ChevronLeft, {\n        size: 18\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), getPageNumbers().map((page, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n      className: `page-item ${page === currentPage ? \"active\" : \"\"}`,\n      onClick: () => typeof page === \"number\" && onPageChange(page),\n      disabled: typeof page !== \"number\",\n      children: page\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"page-item\",\n      onClick: () => onPageChange(currentPage + 1),\n      disabled: currentPage === totalPages,\n      children: /*#__PURE__*/_jsxDEV(ChevronRight, {\n        size: 18\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_c = Pagination;\nexport default Pagination;\nvar _c;\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"names":["_jsxFileName","ChevronLeft","ChevronRight","jsxDEV","_jsxDEV","Pagination","currentPage","totalPages","onPageChange","getPageNumbers","pages","maxPagesToShow","i","push","start","Math","max","end","min","className","children","onClick","disabled","size","fileName","lineNumber","columnNumber","map","page","index","_c","$RefreshReg$"],"sources":["C:/Users/Arnav/Desktop/development-project/Task-Management-System/frontend/src/components/Pagination.jsx"],"sourcesContent":["\"use client\"\r\nimport { ChevronLeft, ChevronRight } from \"react-feather\"\r\n\r\nconst Pagination = ({ currentPage, totalPages, onPageChange }) => {\r\n  // Generate page numbers\r\n  const getPageNumbers = () => {\r\n    const pages = []\r\n    const maxPagesToShow = 5\r\n\r\n    if (totalPages <= maxPagesToShow) {\r\n      // Show all pages if total pages are less than or equal to maxPagesToShow\r\n      for (let i = 1; i <= totalPages; i++) {\r\n        pages.push(i)\r\n      }\r\n    } else {\r\n      // Always show first page\r\n      pages.push(1)\r\n\r\n      // Calculate start and end of page range\r\n      let start = Math.max(2, currentPage - 1)\r\n      let end = Math.min(totalPages - 1, currentPage + 1)\r\n\r\n      // Adjust if at the beginning\r\n      if (currentPage <= 2) {\r\n        end = Math.min(totalPages - 1, maxPagesToShow - 1)\r\n      }\r\n\r\n      // Adjust if at the end\r\n      if (currentPage >= totalPages - 1) {\r\n        start = Math.max(2, totalPages - maxPagesToShow + 2)\r\n      }\r\n\r\n      // Add ellipsis if needed\r\n      if (start > 2) {\r\n        pages.push(\"...\")\r\n      }\r\n\r\n      // Add middle pages\r\n      for (let i = start; i <= end; i++) {\r\n        pages.push(i)\r\n      }\r\n\r\n      // Add ellipsis if needed\r\n      if (end < totalPages - 1) {\r\n        pages.push(\"...\")\r\n      }\r\n\r\n      // Always show last page\r\n      pages.push(totalPages)\r\n    }\r\n\r\n    return pages\r\n  }\r\n\r\n  if (totalPages <= 1) return null\r\n\r\n  return (\r\n    <div className=\"pagination\">\r\n      <button className=\"page-item\" onClick={() => onPageChange(currentPage - 1)} disabled={currentPage === 1}>\r\n        <ChevronLeft size={18} />\r\n      </button>\r\n\r\n      {getPageNumbers().map((page, index) => (\r\n        <button\r\n          key={index}\r\n          className={`page-item ${page === currentPage ? \"active\" : \"\"}`}\r\n          onClick={() => typeof page === \"number\" && onPageChange(page)}\r\n          disabled={typeof page !== \"number\"}\r\n        >\r\n          {page}\r\n        </button>\r\n      ))}\r\n\r\n      <button className=\"page-item\" onClick={() => onPageChange(currentPage + 1)} disabled={currentPage === totalPages}>\r\n        <ChevronRight size={18} />\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Pagination\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}