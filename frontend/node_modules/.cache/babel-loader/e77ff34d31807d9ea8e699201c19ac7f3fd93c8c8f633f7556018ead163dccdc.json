{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport api from \"../../utils/api\";\nconst initialState = {\n  tasks: [],\n  task: null,\n  loading: false,\n  error: null,\n  totalPages: 1,\n  currentPage: 1,\n  filters: {\n    status: \"\",\n    priority: \"\",\n    dueDate: \"\",\n    assignedTo: \"\"\n  }\n};\n\n// Get all tasks with filters\nexport const getTasks = createAsyncThunk(\"tasks/getTasks\", async ({\n  page = 1,\n  limit = 10,\n  filters = {}\n}, {\n  rejectWithValue\n}) => {\n  try {\n    let queryString = `page=${page}&limit=${limit}`;\n    if (filters.status) queryString += `&status=${filters.status}`;\n    if (filters.priority) queryString += `&priority=${filters.priority}`;\n    if (filters.dueDate) queryString += `&dueDate=${filters.dueDate}`;\n    if (filters.assignedTo) queryString += `&assignedTo=${filters.assignedTo}`;\n    const response = await api.get(`/tasks?${queryString}`);\n    return response.data;\n  } catch (error) {\n    return rejectWithValue(error.response.data.message || \"Failed to fetch tasks\");\n  }\n});\n\n// Get task by ID\nexport const getTaskById = createAsyncThunk(\"tasks/getTaskById\", async (id, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await api.get(`/tasks/${id}`);\n    return response.data;\n  } catch (error) {\n    return rejectWithValue(error.response.data.message || \"Failed to fetch task\");\n  }\n});\n\n// Create task\nexport const createTask = createAsyncThunk(\"tasks/createTask\", async (taskData, {\n  rejectWithValue\n}) => {\n  try {\n    // Handle file uploads\n    const formData = new FormData();\n\n    // Add task data\n    Object.keys(taskData).forEach(key => {\n      if (key !== \"documents\") {\n        formData.append(key, taskData[key]);\n      }\n    });\n\n    // Add documents if any\n    if (taskData.documents && taskData.documents.length > 0) {\n      for (let i = 0; i < taskData.documents.length; i++) {\n        formData.append(\"documents\", taskData.documents[i]);\n      }\n    }\n    const response = await api.post(\"/tasks\", formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    });\n    return response.data;\n  } catch (error) {\n    return rejectWithValue(error.response.data.message || \"Failed to create task\");\n  }\n});\n\n// Update task\nexport const updateTask = createAsyncThunk(\"tasks/updateTask\", async ({\n  id,\n  taskData\n}, {\n  rejectWithValue\n}) => {\n  try {\n    // Handle file uploads\n    const formData = new FormData();\n\n    // Add task data\n    Object.keys(taskData).forEach(key => {\n      if (key !== \"documents\") {\n        formData.append(key, taskData[key]);\n      }\n    });\n\n    // Add documents if any\n    if (taskData.documents && taskData.documents.length > 0) {\n      for (let i = 0; i < taskData.documents.length; i++) {\n        formData.append(\"documents\", taskData.documents[i]);\n      }\n    }\n    const response = await api.put(`/tasks/${id}`, formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    });\n    return response.data;\n  } catch (error) {\n    return rejectWithValue(error.response.data.message || \"Failed to update task\");\n  }\n});\n\n// Delete task\nexport const deleteTask = createAsyncThunk(\"tasks/deleteTask\", async (id, {\n  rejectWithValue\n}) => {\n  try {\n    await api.delete(`/tasks/${id}`);\n    return id;\n  } catch (error) {\n    return rejectWithValue(error.response.data.message || \"Failed to delete task\");\n  }\n});\n\n// Download document\nexport const downloadDocument = createAsyncThunk(\"tasks/downloadDocument\", async ({\n  taskId,\n  documentId,\n  documentName\n}, {\n  rejectWithValue\n}) => {\n  try {\n    console.log(`Attempting to download document: ${documentId} from task: ${taskId}`);\n    const response = await api.get(`/tasks/${taskId}/documents/${documentId}`, {\n      responseType: \"blob\"\n    });\n\n    // Check if we got a valid blob response\n    if (response.data.size === 0) {\n      console.error(\"Empty response received from server\");\n      return rejectWithValue(\"Empty file received\");\n    }\n\n    // Create a URL for the blob\n    const url = window.URL.createObjectURL(new Blob([response.data]));\n\n    // Create a temporary link and trigger download\n    const link = document.createElement(\"a\");\n    link.href = url;\n    link.setAttribute(\"download\", documentName);\n    document.body.appendChild(link);\n    link.click();\n\n    // Clean up\n    setTimeout(() => {\n      link.parentNode.removeChild(link);\n      window.URL.revokeObjectURL(url);\n    }, 100);\n    return {\n      success: true\n    };\n  } catch (error) {\n    var _error$response, _error$response$data;\n    console.error(\"Download error:\", error);\n    return rejectWithValue(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"Failed to download document\");\n  }\n});\nconst taskSlice = createSlice({\n  name: \"tasks\",\n  initialState,\n  reducers: {\n    clearTaskError: state => {\n      state.error = null;\n    },\n    setFilters: (state, action) => {\n      state.filters = {\n        ...state.filters,\n        ...action.payload\n      };\n    },\n    clearFilters: state => {\n      state.filters = {\n        status: \"\",\n        priority: \"\",\n        dueDate: \"\",\n        assignedTo: \"\"\n      };\n    }\n  },\n  extraReducers: builder => {\n    builder\n    // Get all tasks\n    .addCase(getTasks.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(getTasks.fulfilled, (state, action) => {\n      state.loading = false;\n      state.tasks = action.payload.tasks;\n      state.totalPages = action.payload.totalPages;\n      state.currentPage = action.payload.currentPage;\n    }).addCase(getTasks.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    })\n    // Get task by ID\n    .addCase(getTaskById.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(getTaskById.fulfilled, (state, action) => {\n      state.loading = false;\n      // state.task = action.payload\n      state.task = action.payload.data || action.payload;\n    }).addCase(getTaskById.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    })\n    // Create task\n    .addCase(createTask.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(createTask.fulfilled, (state, action) => {\n      state.loading = false;\n      state.tasks.unshift(action.payload);\n    }).addCase(createTask.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    })\n    // Update task\n    .addCase(updateTask.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(updateTask.fulfilled, (state, action) => {\n      state.loading = false;\n      state.tasks = state.tasks.map(task => task._id === action.payload._id ? action.payload : task);\n      if (state.task && state.task._id === action.payload._id) {\n        state.task = action.payload;\n      }\n    }).addCase(updateTask.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    })\n    // Delete task\n    .addCase(deleteTask.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(deleteTask.fulfilled, (state, action) => {\n      state.loading = false;\n      state.tasks = state.tasks.filter(task => task._id !== action.payload);\n    }).addCase(deleteTask.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    })\n    // Download document\n    .addCase(downloadDocument.pending, state => {\n      // Set loading indicator for downloads if needed\n    }).addCase(downloadDocument.fulfilled, state => {\n      // Clear any previous download errors\n      state.error = null;\n    }).addCase(downloadDocument.rejected, (state, action) => {\n      state.error = action.payload || \"Failed to download document\";\n      // Show the error immediately\n      alert(`Download failed: ${state.error}`);\n    });\n  }\n});\nexport const {\n  clearTaskError,\n  setFilters,\n  clearFilters\n} = taskSlice.actions;\nexport default taskSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","api","initialState","tasks","task","loading","error","totalPages","currentPage","filters","status","priority","dueDate","assignedTo","getTasks","page","limit","rejectWithValue","queryString","response","get","data","message","getTaskById","id","createTask","taskData","formData","FormData","Object","keys","forEach","key","append","documents","length","i","post","headers","updateTask","put","deleteTask","delete","downloadDocument","taskId","documentId","documentName","console","log","responseType","size","url","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","setTimeout","parentNode","removeChild","revokeObjectURL","success","_error$response","_error$response$data","taskSlice","name","reducers","clearTaskError","state","setFilters","action","payload","clearFilters","extraReducers","builder","addCase","pending","fulfilled","rejected","unshift","map","_id","filter","alert","actions","reducer"],"sources":["C:/Users/Arnav/Desktop/development-project/Task-Management-System/frontend/src/redux/slices/taskSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\"\r\nimport api from \"../../utils/api\"\r\n\r\nconst initialState = {\r\n  tasks: [],\r\n  task: null,\r\n  loading: false,\r\n  error: null,\r\n  totalPages: 1,\r\n  currentPage: 1,\r\n  filters: {\r\n    status: \"\",\r\n    priority: \"\",\r\n    dueDate: \"\",\r\n    assignedTo: \"\",\r\n  },\r\n}\r\n\r\n// Get all tasks with filters\r\nexport const getTasks = createAsyncThunk(\r\n  \"tasks/getTasks\",\r\n  async ({ page = 1, limit = 10, filters = {} }, { rejectWithValue }) => {\r\n    try {\r\n      let queryString = `page=${page}&limit=${limit}`\r\n\r\n      if (filters.status) queryString += `&status=${filters.status}`\r\n      if (filters.priority) queryString += `&priority=${filters.priority}`\r\n      if (filters.dueDate) queryString += `&dueDate=${filters.dueDate}`\r\n      if (filters.assignedTo) queryString += `&assignedTo=${filters.assignedTo}`\r\n\r\n      const response = await api.get(`/tasks?${queryString}`)\r\n      return response.data\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data.message || \"Failed to fetch tasks\")\r\n    }\r\n  },\r\n)\r\n\r\n// Get task by ID\r\nexport const getTaskById = createAsyncThunk(\"tasks/getTaskById\", async (id, { rejectWithValue }) => {\r\n  try {\r\n    const response = await api.get(`/tasks/${id}`)\r\n    return response.data\r\n  } catch (error) {\r\n    return rejectWithValue(error.response.data.message || \"Failed to fetch task\")\r\n  }\r\n})\r\n\r\n// Create task\r\nexport const createTask = createAsyncThunk(\"tasks/createTask\", async (taskData, { rejectWithValue }) => {\r\n  try {\r\n    // Handle file uploads\r\n    const formData = new FormData()\r\n\r\n    // Add task data\r\n    Object.keys(taskData).forEach((key) => {\r\n      if (key !== \"documents\") {\r\n        formData.append(key, taskData[key])\r\n      }\r\n    })\r\n\r\n    // Add documents if any\r\n    if (taskData.documents && taskData.documents.length > 0) {\r\n      for (let i = 0; i < taskData.documents.length; i++) {\r\n        formData.append(\"documents\", taskData.documents[i])\r\n      }\r\n    }\r\n\r\n    const response = await api.post(\"/tasks\", formData, {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n    })\r\n\r\n    return response.data\r\n  } catch (error) {\r\n    return rejectWithValue(error.response.data.message || \"Failed to create task\")\r\n  }\r\n})\r\n\r\n// Update task\r\nexport const updateTask = createAsyncThunk(\"tasks/updateTask\", async ({ id, taskData }, { rejectWithValue }) => {\r\n  try {\r\n    // Handle file uploads\r\n    const formData = new FormData()\r\n\r\n    // Add task data\r\n    Object.keys(taskData).forEach((key) => {\r\n      if (key !== \"documents\") {\r\n        formData.append(key, taskData[key])\r\n      }\r\n    })\r\n\r\n    // Add documents if any\r\n    if (taskData.documents && taskData.documents.length > 0) {\r\n      for (let i = 0; i < taskData.documents.length; i++) {\r\n        formData.append(\"documents\", taskData.documents[i])\r\n      }\r\n    }\r\n\r\n    const response = await api.put(`/tasks/${id}`, formData, {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n    })\r\n\r\n    return response.data\r\n  } catch (error) {\r\n    return rejectWithValue(error.response.data.message || \"Failed to update task\")\r\n  }\r\n})\r\n\r\n// Delete task\r\nexport const deleteTask = createAsyncThunk(\"tasks/deleteTask\", async (id, { rejectWithValue }) => {\r\n  try {\r\n    await api.delete(`/tasks/${id}`)\r\n    return id\r\n  } catch (error) {\r\n    return rejectWithValue(error.response.data.message || \"Failed to delete task\")\r\n  }\r\n})\r\n\r\n// Download document\r\nexport const downloadDocument = createAsyncThunk(\r\n  \"tasks/downloadDocument\",\r\n  async ({ taskId, documentId, documentName }, { rejectWithValue }) => {\r\n    try {\r\n      console.log(`Attempting to download document: ${documentId} from task: ${taskId}`);\r\n      \r\n      const response = await api.get(`/tasks/${taskId}/documents/${documentId}`, {\r\n        responseType: \"blob\",\r\n      });\r\n      \r\n      // Check if we got a valid blob response\r\n      if (response.data.size === 0) {\r\n        console.error(\"Empty response received from server\");\r\n        return rejectWithValue(\"Empty file received\");\r\n      }\r\n      \r\n      // Create a URL for the blob\r\n      const url = window.URL.createObjectURL(new Blob([response.data]));\r\n\r\n      // Create a temporary link and trigger download\r\n      const link = document.createElement(\"a\");\r\n      link.href = url;\r\n      link.setAttribute(\"download\", documentName);\r\n      document.body.appendChild(link);\r\n      link.click();\r\n\r\n      // Clean up\r\n      setTimeout(() => {\r\n        link.parentNode.removeChild(link);\r\n        window.URL.revokeObjectURL(url);\r\n      }, 100);\r\n\r\n      return { success: true };\r\n    } catch (error) {\r\n      console.error(\"Download error:\", error);\r\n      return rejectWithValue(error.response?.data?.message || \"Failed to download document\");\r\n    }\r\n  }\r\n);\r\n\r\nconst taskSlice = createSlice({\r\n  name: \"tasks\",\r\n  initialState,\r\n  reducers: {\r\n    clearTaskError: (state) => {\r\n      state.error = null\r\n    },\r\n    setFilters: (state, action) => {\r\n      state.filters = { ...state.filters, ...action.payload }\r\n    },\r\n    clearFilters: (state) => {\r\n      state.filters = {\r\n        status: \"\",\r\n        priority: \"\",\r\n        dueDate: \"\",\r\n        assignedTo: \"\",\r\n      }\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      // Get all tasks\r\n      .addCase(getTasks.pending, (state) => {\r\n        state.loading = true\r\n        state.error = null\r\n      })\r\n      .addCase(getTasks.fulfilled, (state, action) => {\r\n        state.loading = false\r\n        state.tasks = action.payload.tasks\r\n        state.totalPages = action.payload.totalPages\r\n        state.currentPage = action.payload.currentPage\r\n      })\r\n      .addCase(getTasks.rejected, (state, action) => {\r\n        state.loading = false\r\n        state.error = action.payload\r\n      })\r\n      // Get task by ID\r\n      .addCase(getTaskById.pending, (state) => {\r\n        state.loading = true\r\n        state.error = null\r\n      })\r\n      .addCase(getTaskById.fulfilled, (state, action) => {\r\n        state.loading = false\r\n        // state.task = action.payload\r\n        state.task = action.payload.data || action.payload\r\n      })\r\n      .addCase(getTaskById.rejected, (state, action) => {\r\n        state.loading = false\r\n        state.error = action.payload\r\n      })\r\n      // Create task\r\n      .addCase(createTask.pending, (state) => {\r\n        state.loading = true\r\n        state.error = null\r\n      })\r\n      .addCase(createTask.fulfilled, (state, action) => {\r\n        state.loading = false\r\n        state.tasks.unshift(action.payload)\r\n      })\r\n      .addCase(createTask.rejected, (state, action) => {\r\n        state.loading = false\r\n        state.error = action.payload\r\n      })\r\n      // Update task\r\n      .addCase(updateTask.pending, (state) => {\r\n        state.loading = true\r\n        state.error = null\r\n      })\r\n      .addCase(updateTask.fulfilled, (state, action) => {\r\n        state.loading = false\r\n        state.tasks = state.tasks.map((task) => (task._id === action.payload._id ? action.payload : task))\r\n        if (state.task && state.task._id === action.payload._id) {\r\n          state.task = action.payload\r\n        }\r\n      })\r\n      .addCase(updateTask.rejected, (state, action) => {\r\n        state.loading = false\r\n        state.error = action.payload\r\n      })\r\n      // Delete task\r\n      .addCase(deleteTask.pending, (state) => {\r\n        state.loading = true\r\n        state.error = null\r\n      })\r\n      .addCase(deleteTask.fulfilled, (state, action) => {\r\n        state.loading = false\r\n        state.tasks = state.tasks.filter((task) => task._id !== action.payload)\r\n      })\r\n      .addCase(deleteTask.rejected, (state, action) => {\r\n        state.loading = false\r\n        state.error = action.payload\r\n      })\r\n      // Download document\r\n      .addCase(downloadDocument.pending, (state) => {\r\n        // Set loading indicator for downloads if needed\r\n      })\r\n      .addCase(downloadDocument.fulfilled, (state) => {\r\n        // Clear any previous download errors\r\n        state.error = null;\r\n      })\r\n      .addCase(downloadDocument.rejected, (state, action) => {\r\n        state.error = action.payload || \"Failed to download document\";\r\n        // Show the error immediately\r\n        alert(`Download failed: ${state.error}`);\r\n      })\r\n  },\r\n})\r\n\r\nexport const { clearTaskError, setFilters, clearFilters } = taskSlice.actions\r\nexport default taskSlice.reducer\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}