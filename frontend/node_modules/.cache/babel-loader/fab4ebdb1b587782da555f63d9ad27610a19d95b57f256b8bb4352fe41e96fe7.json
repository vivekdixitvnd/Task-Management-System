{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport api from \"../../utils/api\";\nconst initialState = {\n  tasks: [],\n  task: null,\n  loading: false,\n  error: null,\n  totalPages: 1,\n  currentPage: 1,\n  filters: {\n    status: \"\",\n    priority: \"\",\n    dueDate: \"\",\n    assignedTo: \"\"\n  }\n};\n\n// Get all tasks with filters\nexport const getTasks = createAsyncThunk(\"tasks/getTasks\", async ({\n  page = 1,\n  limit = 10,\n  filters = {}\n}, {\n  rejectWithValue\n}) => {\n  try {\n    let queryString = `page=${page}&limit=${limit}`;\n    if (filters.status) queryString += `&status=${filters.status}`;\n    if (filters.priority) queryString += `&priority=${filters.priority}`;\n    if (filters.dueDate) queryString += `&dueDate=${filters.dueDate}`;\n    if (filters.assignedTo) queryString += `&assignedTo=${filters.assignedTo}`;\n    const response = await api.get(`/tasks?${queryString}`);\n    return response.data;\n  } catch (error) {\n    return rejectWithValue(error.response.data.message || \"Failed to fetch tasks\");\n  }\n});\n\n// Get task by ID\nexport const getTaskById = createAsyncThunk(\"tasks/getTaskById\", async (id, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await api.get(`/tasks/${id}`);\n    return response.data;\n  } catch (error) {\n    return rejectWithValue(error.response.data.message || \"Failed to fetch task\");\n  }\n});\n\n// Create task\nexport const createTask = createAsyncThunk(\"tasks/createTask\", async (taskData, {\n  rejectWithValue\n}) => {\n  try {\n    // Handle file uploads\n    const formData = new FormData();\n\n    // Add task data\n    Object.keys(taskData).forEach(key => {\n      if (key !== \"documents\") {\n        formData.append(key, taskData[key]);\n      }\n    });\n\n    // Add documents if any\n    if (taskData.documents && taskData.documents.length > 0) {\n      for (let i = 0; i < taskData.documents.length; i++) {\n        formData.append(\"documents\", taskData.documents[i]);\n      }\n    }\n    const response = await api.post(\"/tasks\", formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    });\n    return response.data;\n  } catch (error) {\n    return rejectWithValue(error.response.data.message || \"Failed to create task\");\n  }\n});\n\n// Update task\nexport const updateTask = createAsyncThunk(\"tasks/updateTask\", async ({\n  id,\n  taskData\n}, {\n  rejectWithValue\n}) => {\n  try {\n    // Handle file uploads\n    const formData = new FormData();\n\n    // Add task data\n    Object.keys(taskData).forEach(key => {\n      if (key !== \"documents\") {\n        formData.append(key, taskData[key]);\n      }\n    });\n\n    // Add documents if any\n    if (taskData.documents && taskData.documents.length > 0) {\n      for (let i = 0; i < taskData.documents.length; i++) {\n        formData.append(\"documents\", taskData.documents[i]);\n      }\n    }\n    const response = await api.put(`/tasks/${id}`, formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    });\n    return response.data;\n  } catch (error) {\n    return rejectWithValue(error.response.data.message || \"Failed to update task\");\n  }\n});\n\n// Delete task\nexport const deleteTask = createAsyncThunk(\"tasks/deleteTask\", async (id, {\n  rejectWithValue\n}) => {\n  try {\n    await api.delete(`/tasks/${id}`);\n    return id;\n  } catch (error) {\n    return rejectWithValue(error.response.data.message || \"Failed to delete task\");\n  }\n});\n\n// Download document\nexport const downloadDocument = createAsyncThunk(\"tasks/downloadDocument\", async ({\n  taskId,\n  documentId,\n  documentName\n}, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await api.get(`/tasks/${taskId}/documents/${documentId}`, {\n      responseType: \"blob\"\n    });\n\n    // Create a URL for the blob\n    const url = window.URL.createObjectURL(new Blob([response.data]));\n\n    // Create a temporary link and trigger download\n    const link = document.createElement(\"a\");\n    link.href = url;\n    link.setAttribute(\"download\", documentName);\n    document.body.appendChild(link);\n    link.click();\n\n    // Clean up\n    link.parentNode.removeChild(link);\n    window.URL.revokeObjectURL(url);\n    return {\n      success: true\n    };\n  } catch (error) {\n    return rejectWithValue(\"Failed to download document\");\n  }\n});\nconst taskSlice = createSlice({\n  name: \"tasks\",\n  initialState,\n  reducers: {\n    clearTaskError: state => {\n      state.error = null;\n    },\n    setFilters: (state, action) => {\n      state.filters = {\n        ...state.filters,\n        ...action.payload\n      };\n    },\n    clearFilters: state => {\n      state.filters = {\n        status: \"\",\n        priority: \"\",\n        dueDate: \"\",\n        assignedTo: \"\"\n      };\n    }\n  },\n  extraReducers: builder => {\n    builder\n    // Get all tasks\n    .addCase(getTasks.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(getTasks.fulfilled, (state, action) => {\n      state.loading = false;\n      state.tasks = action.payload.tasks;\n      state.totalPages = action.payload.totalPages;\n      state.currentPage = action.payload.currentPage;\n    }).addCase(getTasks.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    })\n    // Get task by ID\n    .addCase(getTaskById.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(getTaskById.fulfilled, (state, action) => {\n      state.loading = false;\n      state.task = action.payload;\n    }).addCase(getTaskById.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    })\n    // Create task\n    .addCase(createTask.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(createTask.fulfilled, (state, action) => {\n      state.loading = false;\n      state.tasks.unshift(action.payload);\n    }).addCase(createTask.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    })\n    // Update task\n    .addCase(updateTask.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(updateTask.fulfilled, (state, action) => {\n      state.loading = false;\n      state.tasks = state.tasks.map(task => task._id === action.payload._id ? action.payload : task);\n      if (state.task && state.task._id === action.payload._id) {\n        state.task = action.payload;\n      }\n    }).addCase(updateTask.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    })\n    // Delete task\n    .addCase(deleteTask.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(deleteTask.fulfilled, (state, action) => {\n      state.loading = false;\n      state.tasks = state.tasks.filter(task => task._id !== action.payload);\n    }).addCase(deleteTask.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    })\n    // Download document\n    .addCase(downloadDocument.rejected, (state, action) => {\n      state.error = action.payload;\n    });\n  }\n});\nexport const {\n  clearTaskError,\n  setFilters,\n  clearFilters\n} = taskSlice.actions;\nexport default taskSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","api","initialState","tasks","task","loading","error","totalPages","currentPage","filters","status","priority","dueDate","assignedTo","getTasks","page","limit","rejectWithValue","queryString","response","get","data","message","getTaskById","id","createTask","taskData","formData","FormData","Object","keys","forEach","key","append","documents","length","i","post","headers","updateTask","put","deleteTask","delete","downloadDocument","taskId","documentId","documentName","responseType","url","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","parentNode","removeChild","revokeObjectURL","success","taskSlice","name","reducers","clearTaskError","state","setFilters","action","payload","clearFilters","extraReducers","builder","addCase","pending","fulfilled","rejected","unshift","map","_id","filter","actions","reducer"],"sources":["C:/Users/HP/Downloads/task-management-system (1)/frontend/src/redux/slices/taskSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\"\nimport api from \"../../utils/api\"\n\nconst initialState = {\n  tasks: [],\n  task: null,\n  loading: false,\n  error: null,\n  totalPages: 1,\n  currentPage: 1,\n  filters: {\n    status: \"\",\n    priority: \"\",\n    dueDate: \"\",\n    assignedTo: \"\",\n  },\n}\n\n// Get all tasks with filters\nexport const getTasks = createAsyncThunk(\n  \"tasks/getTasks\",\n  async ({ page = 1, limit = 10, filters = {} }, { rejectWithValue }) => {\n    try {\n      let queryString = `page=${page}&limit=${limit}`\n\n      if (filters.status) queryString += `&status=${filters.status}`\n      if (filters.priority) queryString += `&priority=${filters.priority}`\n      if (filters.dueDate) queryString += `&dueDate=${filters.dueDate}`\n      if (filters.assignedTo) queryString += `&assignedTo=${filters.assignedTo}`\n\n      const response = await api.get(`/tasks?${queryString}`)\n      return response.data\n    } catch (error) {\n      return rejectWithValue(error.response.data.message || \"Failed to fetch tasks\")\n    }\n  },\n)\n\n// Get task by ID\nexport const getTaskById = createAsyncThunk(\"tasks/getTaskById\", async (id, { rejectWithValue }) => {\n  try {\n    const response = await api.get(`/tasks/${id}`)\n    return response.data\n  } catch (error) {\n    return rejectWithValue(error.response.data.message || \"Failed to fetch task\")\n  }\n})\n\n// Create task\nexport const createTask = createAsyncThunk(\"tasks/createTask\", async (taskData, { rejectWithValue }) => {\n  try {\n    // Handle file uploads\n    const formData = new FormData()\n\n    // Add task data\n    Object.keys(taskData).forEach((key) => {\n      if (key !== \"documents\") {\n        formData.append(key, taskData[key])\n      }\n    })\n\n    // Add documents if any\n    if (taskData.documents && taskData.documents.length > 0) {\n      for (let i = 0; i < taskData.documents.length; i++) {\n        formData.append(\"documents\", taskData.documents[i])\n      }\n    }\n\n    const response = await api.post(\"/tasks\", formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n      },\n    })\n\n    return response.data\n  } catch (error) {\n    return rejectWithValue(error.response.data.message || \"Failed to create task\")\n  }\n})\n\n// Update task\nexport const updateTask = createAsyncThunk(\"tasks/updateTask\", async ({ id, taskData }, { rejectWithValue }) => {\n  try {\n    // Handle file uploads\n    const formData = new FormData()\n\n    // Add task data\n    Object.keys(taskData).forEach((key) => {\n      if (key !== \"documents\") {\n        formData.append(key, taskData[key])\n      }\n    })\n\n    // Add documents if any\n    if (taskData.documents && taskData.documents.length > 0) {\n      for (let i = 0; i < taskData.documents.length; i++) {\n        formData.append(\"documents\", taskData.documents[i])\n      }\n    }\n\n    const response = await api.put(`/tasks/${id}`, formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n      },\n    })\n\n    return response.data\n  } catch (error) {\n    return rejectWithValue(error.response.data.message || \"Failed to update task\")\n  }\n})\n\n// Delete task\nexport const deleteTask = createAsyncThunk(\"tasks/deleteTask\", async (id, { rejectWithValue }) => {\n  try {\n    await api.delete(`/tasks/${id}`)\n    return id\n  } catch (error) {\n    return rejectWithValue(error.response.data.message || \"Failed to delete task\")\n  }\n})\n\n// Download document\nexport const downloadDocument = createAsyncThunk(\n  \"tasks/downloadDocument\",\n  async ({ taskId, documentId, documentName }, { rejectWithValue }) => {\n    try {\n      const response = await api.get(`/tasks/${taskId}/documents/${documentId}`, {\n        responseType: \"blob\",\n      })\n\n      // Create a URL for the blob\n      const url = window.URL.createObjectURL(new Blob([response.data]))\n\n      // Create a temporary link and trigger download\n      const link = document.createElement(\"a\")\n      link.href = url\n      link.setAttribute(\"download\", documentName)\n      document.body.appendChild(link)\n      link.click()\n\n      // Clean up\n      link.parentNode.removeChild(link)\n      window.URL.revokeObjectURL(url)\n\n      return { success: true }\n    } catch (error) {\n      return rejectWithValue(\"Failed to download document\")\n    }\n  },\n)\n\nconst taskSlice = createSlice({\n  name: \"tasks\",\n  initialState,\n  reducers: {\n    clearTaskError: (state) => {\n      state.error = null\n    },\n    setFilters: (state, action) => {\n      state.filters = { ...state.filters, ...action.payload }\n    },\n    clearFilters: (state) => {\n      state.filters = {\n        status: \"\",\n        priority: \"\",\n        dueDate: \"\",\n        assignedTo: \"\",\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      // Get all tasks\n      .addCase(getTasks.pending, (state) => {\n        state.loading = true\n        state.error = null\n      })\n      .addCase(getTasks.fulfilled, (state, action) => {\n        state.loading = false\n        state.tasks = action.payload.tasks\n        state.totalPages = action.payload.totalPages\n        state.currentPage = action.payload.currentPage\n      })\n      .addCase(getTasks.rejected, (state, action) => {\n        state.loading = false\n        state.error = action.payload\n      })\n      // Get task by ID\n      .addCase(getTaskById.pending, (state) => {\n        state.loading = true\n        state.error = null\n      })\n      .addCase(getTaskById.fulfilled, (state, action) => {\n        state.loading = false\n        state.task = action.payload\n      })\n      .addCase(getTaskById.rejected, (state, action) => {\n        state.loading = false\n        state.error = action.payload\n      })\n      // Create task\n      .addCase(createTask.pending, (state) => {\n        state.loading = true\n        state.error = null\n      })\n      .addCase(createTask.fulfilled, (state, action) => {\n        state.loading = false\n        state.tasks.unshift(action.payload)\n      })\n      .addCase(createTask.rejected, (state, action) => {\n        state.loading = false\n        state.error = action.payload\n      })\n      // Update task\n      .addCase(updateTask.pending, (state) => {\n        state.loading = true\n        state.error = null\n      })\n      .addCase(updateTask.fulfilled, (state, action) => {\n        state.loading = false\n        state.tasks = state.tasks.map((task) => (task._id === action.payload._id ? action.payload : task))\n        if (state.task && state.task._id === action.payload._id) {\n          state.task = action.payload\n        }\n      })\n      .addCase(updateTask.rejected, (state, action) => {\n        state.loading = false\n        state.error = action.payload\n      })\n      // Delete task\n      .addCase(deleteTask.pending, (state) => {\n        state.loading = true\n        state.error = null\n      })\n      .addCase(deleteTask.fulfilled, (state, action) => {\n        state.loading = false\n        state.tasks = state.tasks.filter((task) => task._id !== action.payload)\n      })\n      .addCase(deleteTask.rejected, (state, action) => {\n        state.loading = false\n        state.error = action.payload\n      })\n      // Download document\n      .addCase(downloadDocument.rejected, (state, action) => {\n        state.error = action.payload\n      })\n  },\n})\n\nexport const { clearTaskError, setFilters, clearFilters } = taskSlice.actions\nexport default taskSlice.reducer\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}