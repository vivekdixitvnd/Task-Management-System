{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport api from \"../../utils/api\";\nconst initialState = {\n  users: [],\n  user: null,\n  loading: false,\n  error: null,\n  totalPages: 1,\n  currentPage: 1\n};\n\n// Get all users\nexport const getUsers = createAsyncThunk(\"users/getUsers\", async ({\n  page = 1,\n  limit = 10\n}, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await api.get(`/users?page=${page}&limit=${limit}`);\n    return response.data;\n  } catch (error) {\n    return rejectWithValue(error.response.data.message || \"Failed to fetch users\");\n  }\n});\n\n// Get user by ID\nexport const getUserById = createAsyncThunk(\"users/getUserById\", async (id, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await api.get(`/users/${id}`);\n    return response.data;\n  } catch (error) {\n    return rejectWithValue(error.response.data.message || \"Failed to fetch user\");\n  }\n});\n\n// Create user (admin only)\nexport const createUser = createAsyncThunk(\"users/createUser\", async (userData, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await api.post(\"/users\", userData);\n    return response.data;\n  } catch (error) {\n    return rejectWithValue(error.response.data.message || \"Failed to create user\");\n  }\n});\n\n// Update user\nexport const updateUser = createAsyncThunk(\"users/updateUser\", async ({\n  id,\n  userData\n}, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await api.put(`/users/${id}`, userData);\n    return response.data;\n  } catch (error) {\n    return rejectWithValue(error.response.data.message || \"Failed to update user\");\n  }\n});\n\n// Delete user\nexport const deleteUser = createAsyncThunk(\"users/deleteUser\", async (id, {\n  rejectWithValue\n}) => {\n  try {\n    await api.delete(`/users/${id}`);\n    return id;\n  } catch (error) {\n    return rejectWithValue(error.response.data.message || \"Failed to delete user\");\n  }\n});\nconst userSlice = createSlice({\n  name: \"users\",\n  initialState,\n  reducers: {\n    clearUserError: state => {\n      state.error = null;\n    }\n  },\n  extraReducers: builder => {\n    builder\n    // Get all users\n    .addCase(getUsers.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(getUsers.fulfilled, (state, action) => {\n      state.loading = false;\n      state.users = action.payload.users;\n      state.totalPages = action.payload.totalPages;\n      state.currentPage = action.payload.currentPage;\n    }).addCase(getUsers.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    })\n    // Get user by ID\n    .addCase(getUserById.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(getUserById.fulfilled, (state, action) => {\n      state.loading = false;\n      state.user = action.payload;\n    }).addCase(getUserById.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    })\n    // Create user\n    .addCase(createUser.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(createUser.fulfilled, (state, action) => {\n      state.loading = false;\n      state.users.push(action.payload);\n    }).addCase(createUser.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    })\n    // Update user\n    .addCase(updateUser.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(updateUser.fulfilled, (state, action) => {\n      state.loading = false;\n      state.users = state.users.map(user => user._id === action.payload._id ? action.payload : user);\n      if (state.user && state.user._id === action.payload._id) {\n        state.user = action.payload;\n      }\n    }).addCase(updateUser.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    })\n    // Delete user\n    .addCase(deleteUser.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(deleteUser.fulfilled, (state, action) => {\n      state.loading = false;\n      state.users = state.users.filter(user => user._id !== action.payload);\n    }).addCase(deleteUser.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    });\n  }\n});\nexport const {\n  clearUserError\n} = userSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","api","initialState","users","user","loading","error","totalPages","currentPage","getUsers","page","limit","rejectWithValue","response","get","data","message","getUserById","id","createUser","userData","post","updateUser","put","deleteUser","delete","userSlice","name","reducers","clearUserError","state","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","push","map","_id","filter","actions","reducer"],"sources":["C:/Users/Arnav/Desktop/development-project/Task-Management-System/frontend/src/redux/slices/userSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\"\r\nimport api from \"../../utils/api\"\r\n\r\nconst initialState = {\r\n  users: [],\r\n  user: null,\r\n  loading: false,\r\n  error: null,\r\n  totalPages: 1,\r\n  currentPage: 1,\r\n}\r\n\r\n// Get all users\r\nexport const getUsers = createAsyncThunk(\"users/getUsers\", async ({ page = 1, limit = 10 }, { rejectWithValue }) => {\r\n  try {\r\n    const response = await api.get(`/users?page=${page}&limit=${limit}`)\r\n    return response.data\r\n  } catch (error) {\r\n    return rejectWithValue(error.response.data.message || \"Failed to fetch users\")\r\n  }\r\n})\r\n\r\n// Get user by ID\r\nexport const getUserById = createAsyncThunk(\"users/getUserById\", async (id, { rejectWithValue }) => {\r\n  try {\r\n    const response = await api.get(`/users/${id}`)\r\n    return response.data\r\n  } catch (error) {\r\n    return rejectWithValue(error.response.data.message || \"Failed to fetch user\")\r\n  }\r\n})\r\n\r\n// Create user (admin only)\r\nexport const createUser = createAsyncThunk(\"users/createUser\", async (userData, { rejectWithValue }) => {\r\n  try {\r\n    const response = await api.post(\"/users\", userData)\r\n    return response.data\r\n  } catch (error) {\r\n    return rejectWithValue(error.response.data.message || \"Failed to create user\")\r\n  }\r\n})\r\n\r\n// Update user\r\nexport const updateUser = createAsyncThunk(\"users/updateUser\", async ({ id, userData }, { rejectWithValue }) => {\r\n  try {\r\n    const response = await api.put(`/users/${id}`, userData)\r\n    return response.data\r\n  } catch (error) {\r\n    return rejectWithValue(error.response.data.message || \"Failed to update user\")\r\n  }\r\n})\r\n\r\n// Delete user\r\nexport const deleteUser = createAsyncThunk(\"users/deleteUser\", async (id, { rejectWithValue }) => {\r\n  try {\r\n    await api.delete(`/users/${id}`)\r\n    return id\r\n  } catch (error) {\r\n    return rejectWithValue(error.response.data.message || \"Failed to delete user\")\r\n  }\r\n})\r\n\r\nconst userSlice = createSlice({\r\n  name: \"users\",\r\n  initialState,\r\n  reducers: {\r\n    clearUserError: (state) => {\r\n      state.error = null\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      // Get all users\r\n      .addCase(getUsers.pending, (state) => {\r\n        state.loading = true\r\n        state.error = null\r\n      })\r\n      .addCase(getUsers.fulfilled, (state, action) => {\r\n        state.loading = false\r\n        state.users = action.payload.users\r\n        state.totalPages = action.payload.totalPages\r\n        state.currentPage = action.payload.currentPage\r\n      })\r\n      .addCase(getUsers.rejected, (state, action) => {\r\n        state.loading = false\r\n        state.error = action.payload\r\n      })\r\n      // Get user by ID\r\n      .addCase(getUserById.pending, (state) => {\r\n        state.loading = true\r\n        state.error = null\r\n      })\r\n      .addCase(getUserById.fulfilled, (state, action) => {\r\n        state.loading = false\r\n        state.user = action.payload\r\n      })\r\n      .addCase(getUserById.rejected, (state, action) => {\r\n        state.loading = false\r\n        state.error = action.payload\r\n      })\r\n      // Create user\r\n      .addCase(createUser.pending, (state) => {\r\n        state.loading = true\r\n        state.error = null\r\n      })\r\n      .addCase(createUser.fulfilled, (state, action) => {\r\n        state.loading = false\r\n        state.users.push(action.payload)\r\n      })\r\n      .addCase(createUser.rejected, (state, action) => {\r\n        state.loading = false\r\n        state.error = action.payload\r\n      })\r\n      // Update user\r\n      .addCase(updateUser.pending, (state) => {\r\n        state.loading = true\r\n        state.error = null\r\n      })\r\n      .addCase(updateUser.fulfilled, (state, action) => {\r\n        state.loading = false\r\n        state.users = state.users.map((user) => (user._id === action.payload._id ? action.payload : user))\r\n        if (state.user && state.user._id === action.payload._id) {\r\n          state.user = action.payload\r\n        }\r\n      })\r\n      .addCase(updateUser.rejected, (state, action) => {\r\n        state.loading = false\r\n        state.error = action.payload\r\n      })\r\n      // Delete user\r\n      .addCase(deleteUser.pending, (state) => {\r\n        state.loading = true\r\n        state.error = null\r\n      })\r\n      .addCase(deleteUser.fulfilled, (state, action) => {\r\n        state.loading = false\r\n        state.users = state.users.filter((user) => user._id !== action.payload)\r\n      })\r\n      .addCase(deleteUser.rejected, (state, action) => {\r\n        state.loading = false\r\n        state.error = action.payload\r\n      })\r\n  },\r\n})\r\n\r\nexport const { clearUserError } = userSlice.actions\r\nexport default userSlice.reducer\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}